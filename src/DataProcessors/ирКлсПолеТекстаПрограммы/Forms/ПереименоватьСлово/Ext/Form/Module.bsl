Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЭтаФорма.СтароеСлово = ТекущееОбъектноеВыражение();
	Если Ложь
		Или Не ЗначениеЗаполнено(СтароеСлово)
		Или Найти(СтароеСлово, ".") > 0
	Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	ЭтаФорма.ЛиМетод = Прав(СтароеСлово, 1) = "("; 
	Если ЛиМетод Тогда
		ЭтаФорма.СтароеСлово = ирОбщий.СтрокаБезКонцаЛкс(СтароеСлово);
	КонецЕсли;
	ЗаполнитьТаблицуСлов(); 
	ОписаниеСлова = ТаблицаСлов.НайтиСтроки(Новый Структура("НСлово, ТипСлова", НРег(СтароеСлово), ?(ЛиМетод, "Метод", "Свойство")));
	Если ОписаниеСлова.Количество() > 0 Тогда
		ОписаниеСлова = ОписаниеСлова[0];
	Иначе
		ОписаниеСлова = Неопределено;
	КонецЕсли;
	Если Истина
		И ОписаниеСлова <> Неопределено 
		И ОписаниеСлова.ТипСлова = "Конструкция"
	Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если ОписаниеСлова <> Неопределено Тогда
		Определение = ОписаниеСлова.Определение;
	Иначе 
		Если мМодульМетаданных.Методы.НайтиСтроки(Новый Структура("НИмя", НРег(СтароеСлово))).Количество() > 0 Тогда 
			Определение = "Метаданные";
		Иначе
			Определение = "Неизвестно";
		КонецЕсли;
	КонецЕсли;
	ЭлементыФормы.НадписьТипОпределения.Заголовок = "Принадлежность: " + Определение;
	ЭтаФорма.НовоеСлово = СтароеСлово;
	Вхождения = ВхожденияСлова(СтароеСлово);
	Если Вхождения.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ирОбщий.ОбновитьТекстПослеМаркераЛкс(ЭлементыФормы.НадписьНайдено.Заголовок,, Вхождения.Количество(), ": ");
КонецПроцедуры

Процедура ПриОткрытии()
	
	ирКлиент.Форма_ПриОткрытииЛкс(ЭтаФорма);     
	Если ЛиМетод Тогда
		ЭтаФорма.Заголовок = ирОбщий.СтрЗаменитьЛкс(Заголовок, "слово", "метод");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ирКлиент.Форма_ПриЗакрытииЛкс(ЭтаФорма);
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирКлиент.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ВпередНажатие(Элемент)
	
	Если Не НайтиПоказатьСловоВТексте(СтароеСлово, ШаблонПоискаСлова(СтароеСлово),, Истина,, Не ЛиМетод) Тогда 
		НайтиПоказатьСловоВТексте(СтароеСлово, ШаблонПоискаСлова(СтароеСлово),, Истина, Истина, Не ЛиМетод);
	КонецЕсли;
	
КонецПроцедуры

Функция ВхожденияСлова(Слово)
	
	ШаблонПоискаСлова = ШаблонПоискаСлова(Слово);
	Вхождения = ирОбщий.НайтиРегВыражениеЛкс(ОпределениеАктивногоМетодаСОписанием(), ШаблонПоискаСлова,,,,,,,, Истина);
	Возврат Вхождения;

КонецФункции

Функция ШаблонПоискаСлова(Слово)
	Возврат ирОбщий.ШаблонПоискаСловаЛкс(Слово, ШаблонШаблонаПоискаСлова(ЛиМетод));
КонецФункции

Процедура ОсновныеДействияФормыПрименитьИЗакрыть(Кнопка)
	
	#Если Сервер И Не Сервер Тогда
		ПолеТекста = Обработки.ирОболочкаПолеТекста.Создать();
	#КонецЕсли
	Если Не ЗначениеЗаполнено(НовоеСлово) Тогда
		Предупреждение("Нужно указать новое имя");
		Возврат;
	КонецЕсли; 
	Если Не ирОбщий.ЛиИмяПеременнойЛкс(НовоеСлово) Тогда
		Предупреждение("Некорректное новое имя");
		Возврат;
	КонецЕсли;
	Если НайтиПоказатьСловоВТексте(НовоеСлово, ШаблонПоискаСлова(НовоеСлово),, Истина, Истина, Не ЛиМетод) Тогда 
		Ответ = Вопрос("Новое имя уже используется. Продолжить?", РежимДиалогаВопрос.ОКОтмена);
		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПолеТекста.УстановитьГраницыВыделения(1, 1);
	Пока НайтиПоказатьСловоВТексте(СтароеСлово, ШаблонПоискаСлова(СтароеСлово),,, Ложь, Не ЛиМетод) Цикл
		ВыделенныйТекст(НовоеСлово);
	КонецЦикла;
	Закрыть(ЭтаФорма);
	
КонецПроцедуры

Процедура НовоеСловоПриИзменении(Элемент)
	ирКлиент.ПолеВводаСИсториейВыбора_ПриИзмененииЛкс(Элемент, ЭтаФорма);
КонецПроцедуры

Процедура НовоеСловоНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ирОбщий.ПолеВводаСИсториейВыбора_ОбновитьСписокЛкс(Элемент, ЭтаФорма);
КонецПроцедуры

ирКлиент.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирКлсПолеТекстаПрограммы.Форма.ПереименоватьСлово");
