Перем ОбработчикРасшифровки Экспорт;

Функция ПолучитьРезультат()
	
	ирКлиент.ПолеТабличногоДокументаВосстановитьОформлениеТекущихСтрокЛкс(ЭтаФорма, ЭлементыФормы.ПолеТабличногоДокумента);
	Возврат ЭлементыФормы.ПолеТабличногоДокумента.ПолучитьОбласть();
	
КонецФункции

Процедура УстановитьРедактируемоеЗначение(НовоеЗначение)
	
	#Если Сервер И Не Сервер Тогда
		НовоеЗначение = Новый ТабличныйДокумент;
	#КонецЕсли   
	Если ЭлементыФормы.КодЯзыка.Доступность Тогда
		ЭтаФорма.КодЯзыка = НовоеЗначение.КодЯзыка;
		Если Не ЗначениеЗаполнено(КодЯзыка) Тогда
			ЭтаФорма.КодЯзыка = ТекущийЯзык().КодЯзыка;
		КонецЕсли;
	КонецЕсли;
	Если ирКэш.ЭтоУчебнаяПлатформаЛкс() Тогда
		// Так только текущий язык останется
		ЭлементыФормы.ПолеТабличногоДокумента.ВставитьОбласть(НовоеЗначение.Область(),,, Ложь); 
	Иначе
		// Так будут потеряны несериализуемые расшифровки
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("mxl");
		НовоеЗначение.Записать(ИмяВременногоФайла);
		ЭлементыФормы.ПолеТабличногоДокумента.Прочитать(ИмяВременногоФайла);
		УдалитьФайлы(ИмяВременногоФайла);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ЭлементыФормы.ПолеТабличногоДокумента, НовоеЗначение); 
	ЭлементыФормы.ПолеТабличногоДокумента.ТолькоПросмотр = Не ЭлементыФормы.КоманднаяПанельТабличныйДокумент.Кнопки.Редактирование.Пометка;
	ЭлементыФормы.ПолеТабличногоДокумента.ОтображатьЗаголовки = Истина;
	//Если ПолеТабличногоДокумента <> Неопределено Тогда
	//	#Если Сервер И Не Сервер Тогда
	//		ПолеТабличногоДокумента = Новый ТабличныйДокумент;
	//	#КонецЕсли
	//	ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть = ЭлементыФормы.ПолеТабличногоДокумента.Область(ПолеТабличногоДокумента.ТекущаяОбласть.Имя);
	//КонецЕсли;
	УстановитьВыделятьТекущиеСтроки(Истина);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ирКлиент.Форма_ПриОткрытииЛкс(ЭтаФорма);
	//ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОК.Доступность = МодальныйРежим;
	Если НачальноеЗначениеВыбора = Неопределено Тогда
		НачальноеЗначениеВыбора = Новый ТабличныйДокумент;
	КонецЕсли;
	ирКлиент.ФормаОбъекта_ОбновитьЗаголовокЛкс(ЭтаФорма);
	Если ЭтаФорма.ТолькоПросмотр Тогда
		ЭлементыФормы.КоманднаяПанельТабличныйДокумент.Кнопки.Редактирование.Доступность = Ложь;
	ИначеЕсли НачальноеЗначениеВыбора.ВысотаТаблицы = 0 Тогда 
		КоманднаяПанельТабличныйДокументРедактирование();
	КонецЕсли; 
	ЭлементыФормы.КодЯзыка.Доступность = ирКэш.НомерВерсииПлатформыЛкс() >= 803007;
	Если ЭлементыФормы.КодЯзыка.Доступность Тогда
		Для Каждого Язык Из Метаданные.Языки Цикл
			#Если Сервер И Не Сервер Тогда
				Язык = Метаданные.Языки.Русский;
			#КонецЕсли
			ЭлементыФормы.КодЯзыка.СписокВыбора.Добавить(Язык.КодЯзыка, Язык.Имя + " - " + Язык.КодЯзыка);
		КонецЦикла;
		ЭлементыФормы.КодЯзыка.СписокВыбора.СортироватьПоПредставлению();
	КонецЕсли;
	УстановитьРедактируемоеЗначение(НачальноеЗначениеВыбора);
	ДопСвойства = ирКлиент.ДопСвойстваЭлементаФормыЛкс(ЭтаФорма, ЭлементыФормы.ПолеТабличногоДокумента);
	ДопСвойства.КнопкаОтображенияПодвала = ЭлементыФормы.КоманднаяПанельТабличныйДокумент.Кнопки.Автосумма;
	ДопСвойства.КнопкаОформленияТекущихСтрок = ЭлементыФормы.КоманднаяПанельТабличныйДокумент.Кнопки.ВыделятьТекущиеСтроки;

КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка = Неопределено)
	
	Если Не ЭтаФорма.МодальныйРежим И ЭтаФорма.ВладелецФормы = Неопределено Тогда 
		Если Не ЭтаФорма.Модифицированность Или КоманднаяПанельТабличныйДокументСохранитьВФайл() Тогда 
			Закрыть();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Модифицированность = Ложь;
	НовоеЗначение = ПолучитьРезультат();
	ирКлиент.ПрименитьИзмененияИЗакрытьФормуЛкс(ЭтаФорма, НовоеЗначение);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыИсследовать(Кнопка)
	
	ирОбщий.ИсследоватьЛкс(ПолучитьРезультат());
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Ответ = ирКлиент.ЗапроситьСохранениеДанныхФормыЛкс(ЭтаФорма, Отказ);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОсновныеДействияФормыОК();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаЗагрузитьИзФайла(Кнопка)
	
	ирКлиент.ЗагрузитьТабличныйДокументИнтерактивноЛкс(ЭлементыФормы.ПолеТабличногоДокумента);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыРедактироватьКопию(Кнопка)
	
	ирКлиент.ПредложитьЗакрытьМодальнуюФормуЛкс(ЭтаФорма);
	ирКлиент.ОткрытьЗначениеЛкс(ПолучитьРезультат().ПолучитьОбласть(),,, ирКлиент.ЗаголовокДляКопииОбъектаЛкс(ЭтаФорма), Ложь);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник) Экспорт
	
	ирКлиент.Форма_ОбработкаОповещенияЛкс(ЭтаФорма, ИмяСобытия, Параметр, Источник); 

КонецПроцедуры

Процедура ПолеТабличногоДокументаПриАктивизацииОбласти(_Элемент = Неопределено)
	
	Элемент = ЭлементыФормы.ПолеТабличногоДокумента;
	ЭлементыФормы.КоманднаяПанельТабличныйДокумент.Кнопки.РасшифровкаЯчейки.Доступность = Истина
		И ТипЗнч(ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть) = Тип("ОбластьЯчеекТабличногоДокумента")
		И ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
		И ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.Расшифровка <> Неопределено;
	Если Открыта() Тогда
		ирКлиент.ПолеТабличногоДокументаПриАктивизацииОбластиЛкс(ЭтаФорма, Элемент);
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументСравнить(Кнопка)
	
	ирКлиент.ЗапомнитьСодержимоеЭлементаФормыДляСравненияЛкс(ЭтаФорма, ЭлементыФормы.ПолеТабличногоДокумента);
	
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументРедактирование(Кнопка = Неопределено)
	
	Кнопка = ЭлементыФормы.КоманднаяПанельТабличныйДокумент.Кнопки.Редактирование;
	Кнопка.Пометка = Не Кнопка.Пометка;
	ЭлементыФормы.ПолеТабличногоДокумента.ТолькоПросмотр = Не Кнопка.Пометка;
	
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументРедакторОбъектаБД(Кнопка)
	
	ЗначениеРасшифровки = ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.Расшифровка;
	Если ирОбщий.ЛиСсылкаНаОбъектБДЛкс(ЗначениеРасшифровки) Тогда
		ирКлиент.ПредложитьЗакрытьМодальнуюФормуЛкс(ЭтаФорма);
		ирКлиент.ОткрытьСсылкуВРедактореОбъектаБДЛкс(ЗначениеРасшифровки);
	КонецЕсли; 

КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументПередатьВПодборИОбработкуОбъектов(Кнопка)
	
	ТаблицаЗначений = ирОбщий.ТаблицаКлючейИзТабличногоДокументаЛкс(ЭлементыФормы.ПолеТабличногоДокумента);
	Если ТаблицаЗначений.Количество() > 0 Тогда
		ирКлиент.ПредложитьЗакрытьМодальнуюФормуЛкс(ЭтаФорма);
		ирКлиент.ОткрытьМассивОбъектовВПодбореИОбработкеОбъектовЛкс(ТаблицаЗначений.ВыгрузитьКолонку(0));
	КонецЕсли; 
	
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументАвтоширина(Кнопка)
	
	ирКлиент.УстановитьАвтоширинуКолонокТабличногоДокументаЛкс(ЭлементыФормы.ПолеТабличногоДокумента);
	
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументЗафиксировать(Кнопка)
	
	ЭлементыФормы.ПолеТабличногоДокумента.ФиксацияСлева = ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.Лево - 1;
	ЭлементыФормы.ПолеТабличногоДокумента.ФиксацияСверху = ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.Верх - 1;
	
КонецПроцедуры

Функция КоманднаяПанельТабличныйДокументСохранитьВФайл(Кнопка = Неопределено)
	
	Результат = ирКлиент.СохранитьТабличныйДокументИнтерактивноЛкс(ЭлементыФормы.ПолеТабличногоДокумента,,, УстанавливатьПризнакСодержитЗначение, ЭтаФорма);
	Возврат Результат;
	
КонецФункции

Процедура КоманднаяПанельТабличныйДокументЗагрузитьВТаблицуЗначений(Кнопка)
	
	ирКлиент.ПредложитьЗакрытьМодальнуюФормуЛкс(ЭтаФорма);
	ирКлиент.ПолеТабличногоДокументаВосстановитьОформлениеТекущихСтрокЛкс(ЭтаФорма, ЭлементыФормы.ПолеТабличногоДокумента);
	ЗагрузкаТабличныхДанных = ирОбщий.СоздатьОбъектПоИмениМетаданныхЛкс("Обработка.ирЗагрузкаТабличныхДанных");
	#Если Сервер И Не Сервер Тогда
	    ЗагрузкаТабличныхДанных = Обработки.ирЗагрузкаТабличныхДанных.Создать();
	#КонецЕсли
	Форма = ЗагрузкаТабличныхДанных.ПолучитьФорму();
	Форма.ПараметрТабличныйДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	Форма.Открыть();
	Если Открыта() Тогда
		ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть = ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументРасшифровкаЯчейки(Кнопка)
	
	ирОбщий.ИсследоватьЛкс(ЭлементыФормы.ПолеТабличногоДокумента.ТекущаяОбласть.Расшифровка);
	
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументОткрытьВExcel(Кнопка)
	
	ПолноеИмяФайла = ПолучитьИмяВременногоФайла("xlsx");
	ирКлиент.СохранитьТабличныйДокументИнтерактивноЛкс(ЭлементыФормы.ПолеТабличногоДокумента, ПолноеИмяФайла, Истина, УстанавливатьПризнакСодержитЗначение, ЭтаФорма);
	
КонецПроцедуры

Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ОбработчикРасшифровки <> Неопределено И ирКэш.НомерВерсииПлатформыЛкс() >= 803003 Тогда
		Выполнить("ВыполнитьОбработкуОповещения(ОбработчикРасшифровки, Расшифровка)");
	Иначе
		ирКлиент.ОткрытьЗначениеЛкс(Расшифровка, , СтандартнаяОбработка);
	КонецЕсли; 

КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЭтаФорма.КоличествоСтрок = ЭлементыФормы.ПолеТабличногоДокумента.ВысотаТаблицы;
	ЭтаФорма.КоличествоКолонок = ЭлементыФормы.ПолеТабличногоДокумента.ШиринаТаблицы;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	ирКлиент.Форма_ПриЗакрытииЛкс(ЭтаФорма);
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирКлиент.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирКлиент.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

Процедура КлсКомандаНажатие(Кнопка) Экспорт 
	ирКлиент.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументВыделятьТекущиеСтроки(Кнопка)
	
	УстановитьВыделятьТекущиеСтроки(Не Кнопка.Пометка);
	
КонецПроцедуры

Процедура УстановитьВыделятьТекущиеСтроки(Знач НовыйРежим = Истина)
	
	ЭлементыФормы.КоманднаяПанельТабличныйДокумент.Кнопки.ВыделятьТекущиеСтроки.Пометка = НовыйРежим;
	ирКлиент.ПолеТабличногоДокументаПриАктивизацииОбластиЛкс(ЭтаФорма, ЭлементыФормы.ПолеТабличногоДокумента);

КонецПроцедуры

Процедура КодЯзыкаПриИзменении(Элемент)
	
	ЭлементыФормы.ПолеТабличногоДокумента.КодЯзыка = КодЯзыка;
	СписокВыбора = ЭлементыФормы.КодЯзыка.СписокВыбора;
	Если СписокВыбора.НайтиПоЗначению(КодЯзыка) = Неопределено Тогда
		СписокВыбора.Добавить(КодЯзыка);
		СписокВыбора.СортироватьПоПредставлению();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТабличныйДокументОчиститьРасшифровки(Кнопка)
	
	ТабличныйДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	ТекущаяОбласть = ТабличныйДокумент.ТекущаяОбласть;
	Для НомерСтроки = Макс(1, ТекущаяОбласть.Верх) По Макс(ТекущаяОбласть.Низ, ТабличныйДокумент.ВысотаТаблицы) Цикл
		Для НомерКолонки = Макс(1, ТекущаяОбласть.Лево) По Макс(ТекущаяОбласть.Право, ТабличныйДокумент.ШиринаТаблицы) Цикл
			ЭлементыФормы.ПолеТабличногоДокумента.Область(НомерСтроки, НомерКолонки).Расшифровка = Неопределено;
		КонецЦикла;
	КонецЦикла;
	ЭтаФорма.Модифицированность = Истина;
	ПолеТабличногоДокументаПриАктивизацииОбласти();
	
КонецПроцедуры

ирКлиент.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирПлатформа.Форма.ТабличныйДокумент");
УстанавливатьПризнакСодержитЗначение = Истина;